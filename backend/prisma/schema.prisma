// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int     @id @default(autoincrement())
  uid      String  @unique @default(uuid())
  email    String  @unique
  phone    String  @unique
  name     String?
  password String

  status                  String?   @default("PENDING")
  userWeight              Int?      @default(2)
  isMfaEnabled            Boolean?  @default(false)
  loginAttempts           Int?      @default(0)
  isPasswordValid         Boolean?  @default(false)
  isPasswordResetRequired Boolean?  @default(true)
  lastPasswordResetDate   DateTime? @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roleId        Int
  roleInfo      Roles    @relation(fields: [roleId], references: [id])
  products      Products[]
  promotions    Promotions[]
  orders        Orders[]

  @@map("users")
}

model Products {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  currentPrice       Float //per perUnit
  perUnit            Float
  availableQuantity  Float // in unit_type
  unit  Unit_types
  isActive    Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy Int 
  user      Users @relation(fields: [createdBy], references: [id])
  orderItem OrderItems[]

  @@map("products")
}

model Promotions {
  id           Int    @id @default(autoincrement())
  title        String
  secondTitle  String
  minimumRange Int? // in Unit_types
  maximumRange Int? // in Unit_types. If min preent then max doesnot means unlimated
  unit  Unit_types?

  discountAmount Int
  perQuantity    Float? // in Unit_types
  description    String
  startDate      DateTime
  endDate        DateTime
  type           Promotion_types @default(WEIGHTED)

  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy Int 
  user      Users @relation(fields: [createdBy], references: [id])

  @@map("promotions")
}

model Orders {
  id             Int       @id @default(autoincrement())
  userId         Int
  user           Users     @relation(fields: [userId], references: [id])
  items          OrderItems[]
  status         Order_status @default(PENDING)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@map("orders")
}

model OrderItems {
  id          Int     @id @default(autoincrement())
  orderId     Int
  order       Orders  @relation(fields: [orderId], references: [id])
  productId   Int
  product     Products @relation(fields: [productId], references: [id])
  orderQuantity Float
  unitPrice     Float
  perUnit       Float  //means 20tk in 500g here 500 is per unit

  weightedDiscount    Float  @default(0)
  fixedDiscount       Float  @default(0)
  percentageDiscount  Float  @default(0)
  totalPrice          Float 

  @@map("order_items")
}

model Roles {
  id      Int     @id @default(autoincrement())
  role    Role_names 
  context String 
  Users   Users[]

  @@map("roles")
}

model ActionLog {
  id             String   @id @default(uuid())
  referenceId    Int?
  refereceType   String?
  action         String
  context        String?
  description    String?
  additionalInfo String?
  issuerId       Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

   @@map("action_logs")
}

model ErrorLogs {
  id           Int      @id @default(autoincrement())
  errorMessage String
  errorStack   String
  context      String
  createdAt    DateTime @default(now())

  @@map("error_logs")
}


enum Role_names {  
  SUPER_ADMIN
  ADMIN
  MANAGER
  USER
  DEVELOPER
}

enum Order_status {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

enum Unit_types {
  KG
  GRAM
  LITER
  METER
  PIECE
}

enum Promotion_types {
  WEIGHTED
  FIXED
  PERCENTAGE
}
